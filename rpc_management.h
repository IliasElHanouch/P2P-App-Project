/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _RPC_MANAGEMENT_H_RPCGEN
#define _RPC_MANAGEMENT_H_RPCGEN

#include <rpc/rpc.h>

#include <pthread.h>

#ifdef __cplusplus
extern "C" {
#endif

#define MAX_VALUE1 256

struct Peticion_server {
	char nombre_peticion[MAX_VALUE1];
	char nombre_usuario[MAX_VALUE1];
	char nombre_fichero[MAX_VALUE1];
	char fecha_hora[MAX_VALUE1];
	int op_retorno_rpc;
};
typedef struct Peticion_server Peticion_server;

#define NANODT 55555
#define NANODT_VERSION 1

#if defined(__STDC__) || defined(__cplusplus)
#define d_print_nofile 0
extern  enum clnt_stat d_print_nofile_1(struct Peticion_server , int *, CLIENT *);
extern  bool_t d_print_nofile_1_svc(struct Peticion_server , int *, struct svc_req *);
#define d_print_file 1
extern  enum clnt_stat d_print_file_1(struct Peticion_server , int *, CLIENT *);
extern  bool_t d_print_file_1_svc(struct Peticion_server , int *, struct svc_req *);
extern int nanodt_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define d_print_nofile 0
extern  enum clnt_stat d_print_nofile_1();
extern  bool_t d_print_nofile_1_svc();
#define d_print_file 1
extern  enum clnt_stat d_print_file_1();
extern  bool_t d_print_file_1_svc();
extern int nanodt_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_Peticion_server (XDR *, Peticion_server*);

#else /* K&R C */
extern bool_t xdr_Peticion_server ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_RPC_MANAGEMENT_H_RPCGEN */
